<idea-plugin package="cc.unitmesh.devti.language">
    <dependencies>
        <plugin id="org.intellij.plugins.markdown"/>
        <plugin id="com.jetbrains.sh"/>
    </dependencies>

    <extensions defaultExtensionNs="com.intellij">
        <!--        refs: https://github.com/JetBrains/intellij-sdk-code-samples/blob/main/simple_language_plugin/src/main/resources/META-INF/plugin.xml-->
        <fileType name="DevInFile" implementationClass="cc.unitmesh.devti.language.DevInFileType" fieldName="INSTANCE"
                  language="DevIn" extensions="devin"/>

        <lang.parserDefinition language="DevIn"
                               implementationClass="cc.unitmesh.devti.language.parser.DevInParserDefinition"/>
        <lang.syntaxHighlighterFactory language="DevIn"
                                       implementationClass="cc.unitmesh.devti.language.highlight.DevInSyntaxHighlighterFactory"/>

        <lang.ast.factory language="DevIn"
                          implementationClass="cc.unitmesh.devti.language.DevInAstFactory"/>

        <typedHandler implementation="cc.unitmesh.devti.language.DevInTypedHandler"/>

        <completion.contributor language="DevIn"
                                id="devInCompletionContributor"
                                order="last"
                                implementationClass="cc.unitmesh.devti.language.completion.DevInCompletionContributor"/>
        <completion.contributor language="DevIn"
                                order="last"
                                implementationClass="cc.unitmesh.devti.language.completion.UserCustomCompletionContributor"/>

        <lang.foldingBuilder language="DevIn"
                             implementationClass="cc.unitmesh.devti.language.folding.DevInCustomVariableFoldingBuilder"/>
        <lang.foldingBuilder language="DevIn"
                             implementationClass="cc.unitmesh.devti.language.folding.DevInFileReferenceFoldingBuilder"/>

        <languageInjector implementation="cc.unitmesh.devti.language.DevInLanguageInjector"/>


        <configurationType implementation="cc.unitmesh.devti.language.run.DevInsConfigurationType"/>
        <programRunner implementation="cc.unitmesh.devti.language.run.DevInsProgramRunner"/>
        <runConfigurationBeforeRunProviderDelegate implementation="cc.unitmesh.devti.language.run.DevInsBeforeRunProviderDelegate"/>
        <runConfigurationProducer implementation="cc.unitmesh.devti.language.run.DevInsRunConfigurationProducer"/>
        <runLineMarkerContributor language="DevIn"
                                  implementationClass="cc.unitmesh.devti.language.run.DevInsRunLineMarkersProvider"/>

        <lang.commenter language="DevIn" implementationClass="cc.unitmesh.devti.language.commenter.DevInsCommenter"/>

        <lang.documentationProvider language="DevIn"
                                    id="devinsDocumentationProvider"
                                    implementationClass="cc.unitmesh.devti.language.documentation.DevInsDocumentationProvider"/>

        <localInspection language="DevIn" groupPath="DevIn" groupName="Lints"
                         displayName="Duplicate agent declaration"
                         enabledByDefault="true"
                         level="ERROR"
                         implementationClass="cc.unitmesh.devti.language.lints.DevInsDuplicateAgentInspection"/>
    </extensions>


    <actions>
        <action id="runDevInsFileAction"
                class="cc.unitmesh.devti.language.actions.DevInsRunFileAction"
                use-shortcut-of="RunClass"/>
    </actions>

    <extensions defaultExtensionNs="cc.unitmesh">
        <languageProcessor implementation="cc.unitmesh.devti.language.provider.DevInsPromptProcessor"/>

        <runService implementation="cc.unitmesh.devti.language.compiler.service.ShellRunService"/>
        <runService implementation="cc.unitmesh.devti.language.compiler.service.DevInRunService"/>

        <sketchToolchainProvider implementation="cc.unitmesh.devti.language.compiler.DevInsSketchToolchainProvider"/>
    </extensions>
</idea-plugin>